-- FUNCTION: atm.balance_inquiry_off_us(character varying, character varying, character varying)

-- DROP FUNCTION IF EXISTS atm.balance_inquiry_off_us(character varying, character varying, character varying);

CREATE OR REPLACE FUNCTION atm.balance_inquiry_off_us(
	account_number_ character varying,
	tran_type_ character varying,
	bin_id_ character varying)
    RETURNS TABLE(account_number character varying, balance money, ledger_balance money, interest_rate numeric, status text) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
    ROWS 1000

AS $BODY$
/****** Object: atm.balance_inquiry_on_us(character varying) Author: Jeevan Gharti     Script Date: 11/29/2020 ******/

	DECLARE _min_bal money;
	DECLARE _bal	 money;
	
	DECLARE _from_office_id	integer;
	DECLARE _to_office_id 	integer;
	DECLARE _tran_id	bigint;
	DECLARE _rem_tran_id	bigint;
    DECLARE _ibt_tran_id 	bigint;
	DECLARE _sys_id		integer;
	DECLARE _date		date;
	DECLARE _balance	money;
	DECLARE _from_ac_id	bigint;
	DECLARE _to_ac_id	bigint;--receiver
    DECLARE _local_ibt_pay_gl	bigint;--payable to receiver office from other 
	DECLARE _rem_rec_gl	bigint;--receivable from sender office by receiver office
	DECLARE _pending_amt money;
	DECLARE _atm_gl_id bigint;
	DECLARE _expenses_gl_id_atm_charge bigint;
	DECLARE _corporate_office_id int;
	DECLARE _atm_charge money;
	DECLARE _vostro_ac_id bigint;
	DECLARE _ownership_charge_ac_id bigint;
	DECLARE _atm_charge_ac_id bigint;
	DECLARE _atm_annual_charge_ac_id bigint;
	DECLARE _off_us_atm_charge money;
	DECLARE _vostro_account character varying := (SELECT a.account_number FROM atm.atm_account_setup a WHERE a.account_type = 'VOSTRO');
	DECLARE _ownership_account character varying :=(SELECT a.account_number FROM atm.atm_account_setup a WHERE a.account_type = 'OWNERSHIP');
	DECLARE _atm_charge_account character varying :=(SELECT a.account_number FROM atm.atm_account_setup a WHERE a.account_type = 'ATM CHARGE');

BEGIN
	
	--SELECT '5' INTO _atm_charge;
	SELECT bal_inquiry_charge FROM atm.accepted_bank WHERE bin_id = $3 INTO _atm_charge;
	
	--SELECT '1' INTO _off_us_atm_charge; -- Issuer (Cooperative) Charge Change If required
	SELECT coop_bal_inquiry_charge FROM atm.accepted_bank WHERE bin_id = $3 INTO _off_us_atm_charge;
	
	SELECT * FROM deposit.get_balance($1) INTO _bal;
	SELECT p.minimum_balance INTO _min_bal from core.deposit_products p
	INNER JOIN deposit.account_holders a ON a.deposit_product_id=p.deposit_product_id
	WHERE a.account_number= $1;

	IF _atm_charge <> 0::money THEN 

		--vostro account
		SELECT  account_number_id FROM deposit.account_holders a WHERE a.account_number=_vostro_account INTO  _vostro_ac_id; 


		--OWNERSHP CHARGE A/C
		SELECT  account_number_id FROM deposit.account_holders a WHERE a.account_number=_ownership_account INTO  _ownership_charge_ac_id; 


		--atm charge a/c for on-us charge
		SELECT  account_number_id FROM deposit.account_holders a WHERE a.account_number=_atm_charge_account INTO  _atm_charge_ac_id;

		SELECT office_id, account_number_id FROM deposit.account_holders WHERE account_holders.account_number=$1 INTO _from_office_id, _from_ac_id;

		SELECT office_id FROM office.offices WHERE parent_office_id isnull INTO _corporate_office_id;

		SELECT office.get_sys_user_id() INTO _sys_id;
		SELECT now()::date INTO _date;


		IF _from_office_id = _corporate_office_id THEN
				INSERT INTO transactions.transactions(
					office_id, tran_date, value_date, book_name, 
					total_amount, teller_id, is_flagged, verification_status_id,
					verified_by_user_id, audit_user_id
					  )
				SELECT _from_office_id, _date, _date, 'BalInq',_atm_charge,_sys_id, false, 1,_sys_id,_sys_id;

				  SELECT CURRVAL('transactions.transactions_tran_id_seq') INTO _tran_id;

				  INSERT INTO transactions.transaction_details(
					tran_id, gl_account_id,account_number_id, debit, credit, statement_reference, audit_user_id)

				select _tran_id, deposit.product_gl_account_id($1),_from_ac_id, _atm_charge, NULL, 'BalInq SCT', _sys_id union all 
				select _tran_id, deposit.product_gl_account_id(_vostro_ac_id),_vostro_ac_id, NULL, _atm_charge -_off_us_atm_charge, 'BalInq SCT', _sys_id UNION ALL
				select _tran_id, deposit.product_gl_account_id(_atm_charge_ac_id),_atm_charge_ac_id, NULL, _off_us_atm_charge, 'BalInq SCT', _sys_id;

		ELSE

				SELECT local_payable_gl_account_id INTO _local_ibt_pay_gl FROM core.ibt_setup
				WHERE local_office_id=_corporate_office_id;

				SELECT local_receivable_gl_account_id INTO _rem_rec_gl FROM core.ibt_setup
				WHERE local_office_id=_from_office_id;	

				INSERT INTO transactions.ibt_transactions(book_name,local_office_id,audit_user_id)
				SELECT 'AtmTran',_from_office_id,_sys_id;

				SELECT CURRVAL('transactions.ibt_transactions_ibt_tran_id_seq') INTO _ibt_tran_id;

					INSERT INTO transactions.transactions(
					office_id, tran_date, value_date, book_name, 
					total_amount, teller_id, is_flagged, verification_status_id,
					verified_by_user_id, audit_user_id, ibt_tran_id
					  )
				SELECT _from_office_id, _date, _date, 'AtmTran',_atm_charge,_sys_id, false, 1,_sys_id,_sys_id, _ibt_tran_id;

				SELECT CURRVAL('transactions.transactions_tran_id_seq') INTO _tran_id;

				INSERT INTO transactions.transaction_details(
					tran_id, gl_account_id,account_number_id, debit, credit, statement_reference, audit_user_id)

				select _tran_id, deposit.product_gl_account_id($1),_from_ac_id, _atm_charge, NULL, 'BalInq SCT', _sys_id union all 
				select _tran_id, _local_ibt_pay_gl,NULL, NULL, _atm_charge, 'BalInq SCT', _sys_id;

			  INSERT INTO transactions.transactions(
					office_id, tran_date, value_date, book_name, 
					total_amount, teller_id, is_flagged, verification_status_id,
					verified_by_user_id, audit_user_id, ibt_tran_id)
			  SELECT _corporate_office_id, _date, _date, 'BalInqSCT', _atm_charge,_sys_id, false, 1,_sys_id,_sys_id, _ibt_tran_id;

			  SELECT CURRVAL('transactions.transactions_tran_id_seq') INTO _rem_tran_id;

					INSERT INTO transactions.transaction_details(
					tran_id, gl_account_id,account_number_id, debit, credit, statement_reference, audit_user_id)

				select _rem_tran_id, _rem_rec_gl, NULL, _atm_charge, NULL, 'BalInq SCT', _sys_id union all 
				select _rem_tran_id, deposit.product_gl_account_id(_vostro_ac_id),_vostro_ac_id, NULL, _atm_charge -_off_us_atm_charge, 'BalInq SCT', _sys_id UNION ALL
				select _rem_tran_id, deposit.product_gl_account_id(_atm_charge_ac_id),_atm_charge_ac_id, NULL, _off_us_atm_charge, 'BalInq SCT', _sys_id;

				END IF;

		RETURN QUERY(
			SELECT a.account_number,
				_bal-_min_bal,
				_bal,									
				a.interest_rate::numeric,  
				CASE WHEN a.status=true THEN 'Active' ELSE 'Inactive' END AS status
			FROM deposit.account_holders a 
			WHERE a.account_number = $1
		);
		
	ELSE
	
		RETURN QUERY(
			SELECT a.account_number,
				_bal-_min_bal,
				_bal,									
				a.interest_rate::numeric,  
				CASE WHEN a.status=true THEN 'Active' ELSE 'Inactive' END AS status
			FROM deposit.account_holders a 
			WHERE a.account_number = $1
		);
		
	END IF;
END
$BODY$;

ALTER FUNCTION atm.balance_inquiry_off_us(character varying, character varying, character varying)
    OWNER TO postgres;
