-- FUNCTION: transactions.get_pl_account(integer, integer, date, date)

-- DROP FUNCTION IF EXISTS transactions.get_pl_account(integer, integer, date, date);

CREATE OR REPLACE FUNCTION transactions.get_pl_account(
	office_id_ integer,
	user_id_ integer,
	from_ date,
	till_ date)
    RETURNS TABLE(head character varying, balance money, is_heading integer) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
    ROWS 1000

AS $BODY$

	DECLARE _exp_id		bigint;
	DECLARE _inc_id		bigint;
	DECLARE _gl_account_id	bigint;
	DECLARE _profit		money;
BEGIN
	CREATE TEMP TABLE _t(id serial not null primary key, gl_id bigint, parent_id bigint, balance money, head character varying(100), group_id int) ON COMMIT DROP;

	SELECT gl_account_id INTO _exp_id FROM core.gl_accounts WHERE account_name = 'Expenses';
	SELECT gl_account_id INTO _inc_id FROM core.gl_accounts WHERE account_name = 'Incomes';

	DELETE FROM core.temp_report WHERE user_id = $2 AND details='pldiff' AND office_id=$1;

	IF office_id_ = 0 THEN
		INSERT INTO core.temp_report(office_id, gl_account_id, debit, credit, details, user_id)
		SELECT $1, t.gl_account_id, 
			CASE WHEN COALESCE(sum(COALESCE(t.debit,'0')) - sum(COALESCE(t.credit,'0')),'0') > '0' THEN COALESCE(sum(COALESCE(t.debit,'0')) - sum(COALESCE(t.credit, '0')),'0') ELSE NULL END debit,
			CASE WHEN COALESCE(sum(COALESCE(t.credit,'0')) - sum(COALESCE(t.debit,'0')),'0') > '0' THEN COALESCE(sum(COALESCE(t.credit,'0')) - sum(COALESCE(t.debit,'0')),'0') ELSE NULL END credit,
			'pldiff', $2
		FROM transactions.transactions_view t
		WHERE tran_date BETWEEN $3 AND $4
		AND t.gl_account_id IN (SELECT UNNEST(core.get_child_accounts(_exp_id)) UNION ALL SELECT UNNEST(core.get_child_accounts(_inc_id)))
		GROUP BY t.gl_account_id;
	ELSE
		INSERT INTO core.temp_report(office_id, gl_account_id, debit, credit, details, user_id)
		SELECT $1, t.gl_account_id, 
			CASE WHEN COALESCE(sum(COALESCE(t.debit,'0')) - sum(COALESCE(t.credit,'0')),'0') > '0' THEN COALESCE(sum(COALESCE(t.debit,'0')) - sum(COALESCE(t.credit, '0')),'0') ELSE NULL END debit,
			CASE WHEN COALESCE(sum(COALESCE(t.credit,'0')) - sum(COALESCE(t.debit,'0')),'0') > '0' THEN COALESCE(sum(COALESCE(t.credit,'0')) - sum(COALESCE(t.debit,'0')),'0') ELSE NULL END credit,
			'pldiff', $2
		FROM transactions.transactions_view t
		WHERE tran_date BETWEEN $3 AND $4
		AND office_id = $1
		AND t.gl_account_id IN (SELECT UNNEST(core.get_child_accounts(_exp_id)) UNION ALL SELECT UNNEST(core.get_child_accounts(_inc_id)))
		GROUP BY t.gl_account_id;
	END IF;
	
	UPDATE core.temp_report SET parent_id = gl.parent_gl_account_id
	FROM core.gl_accounts gl
	WHERE core.temp_report.gl_account_id = gl.gl_account_id;

	SELECT gl_account_id INTO _gl_account_id FROM core.char_khata WHERE code = 160.02;
	INSERT INTO _t(gl_id, parent_id, balance, head, group_id) SELECT _gl_account_id, null, null, 'Income From Loan Investment', 1;
	INSERT INTO _t(gl_id, parent_id, balance, group_id) SELECT r.gl_account_id, _gl_account_id, COALESCE(r.credit,'0') - COALESCE(r.debit,'0'), NULL 
	FROM core.temp_report r WHERE r.gl_account_id IN (SELECT unnest(core.get_child_accounts(_gl_account_id))) AND r.details='pl' AND r.user_id=$2;

	SELECT gl_account_id INTO _gl_account_id FROM core.char_khata WHERE code = 160.03;
	INSERT INTO _t(gl_id, parent_id, balance, head, group_id) SELECT _gl_account_id, null, null, 'Income From Other Investments', 1;
	INSERT INTO _t(gl_id, parent_id, balance, group_id) SELECT r.gl_account_id, _gl_account_id, COALESCE(r.credit,'0') - COALESCE(r.debit,'0'), NULL 
	FROM core.temp_report r WHERE r.gl_account_id IN (SELECT unnest(core.get_child_accounts(_gl_account_id))) AND r.details='pl' AND r.user_id=$2;

	SELECT -5 INTO _gl_account_id ;
	INSERT INTO _t(gl_id, parent_id, balance, head, group_id) SELECT _gl_account_id, null, null, 'Other Incomes', 1;
	INSERT INTO _t(gl_id, parent_id, balance, group_id) SELECT r.gl_account_id, _gl_account_id, COALESCE(r.credit,'0') - COALESCE(r.debit,'0'), NULL
	FROM core.temp_report r WHERE r.gl_account_id NOT IN (SELECT COALESCE(_t.gl_id,0) FROM _t) 
	AND core.get_primary_account(r.gl_account_id) = 'Incomes' AND r.details='pl' AND r.user_id=$2;

	INSERT INTO _t(head, group_id) SELECT 'Total Incomes', 0;

	SELECT gl_account_id INTO _gl_account_id FROM core.char_khata WHERE code = 150.07;
	INSERT INTO _t(gl_id, parent_id, balance, head, group_id) SELECT _gl_account_id, null, null, 'Interest Expenses', 2;
	INSERT INTO _t(gl_id, parent_id, balance, group_id) SELECT r.gl_account_id, _gl_account_id, COALESCE(r.debit,'0') - COALESCE(r.credit,'0'), NULL 
	FROM core.temp_report r WHERE r.gl_account_id IN (SELECT unnest(core.get_child_accounts(_gl_account_id))) AND r.details='pl' AND r.user_id=$2;

	SELECT gl_account_id INTO _gl_account_id FROM core.char_khata WHERE code = 150.03;
	INSERT INTO _t(gl_id, parent_id, balance, head, group_id) SELECT _gl_account_id, null, null, 'Employee Expenses', 2;
	INSERT INTO _t(gl_id, parent_id, balance, group_id) SELECT r.gl_account_id, _gl_account_id, COALESCE(r.debit,'0') - COALESCE(r.credit,'0'), NULL 
	FROM core.temp_report r WHERE r.gl_account_id IN (SELECT unnest(core.get_child_accounts(_gl_account_id))) AND r.details='pl' AND r.user_id=$2;

	SELECT -2 INTO _gl_account_id ;
	INSERT INTO _t(gl_id, parent_id, balance, head, group_id) SELECT _gl_account_id, null, null, 'Other Expenses', 2;
	INSERT INTO _t(gl_id, parent_id, balance, group_id) SELECT r.gl_account_id, _gl_account_id, COALESCE(r.debit,'0') - COALESCE(r.credit,'0'), NULL
	FROM core.temp_report r WHERE r.gl_account_id NOT IN (SELECT COALESCE(_t.gl_id,0) FROM _t) AND core.get_primary_account(r.gl_account_id) = 'Expenses' AND r.details='pl' AND r.user_id=$2;

	INSERT INTO _t(head, group_id) SELECT 'Total Expenses', 3;

  	UPDATE _t SET balance = t.bal
  	FROM (
  		SELECT _t.parent_id gl, SUM(COALESCE(_t.balance, '0')) bal
  		FROM _t GROUP BY _t.parent_id
  	) t WHERE t.gl = _t.gl_id;

	UPDATE _t SET balance = (SELECT sum(_t.balance) FROM _t WHERE _t.parent_id = -5) WHERE _t.gl_id=-5;
	UPDATE _t SET balance = (SELECT sum(_t.balance) FROM _t WHERE _t.parent_id = -2) WHERE _t.gl_id=-2;

 	UPDATE _t SET balance = (SELECT SUM(COALESCE(_t.balance,'0')) FROM _t WHERE _t.group_id = 1) WHERE group_id= 0;
 	UPDATE _t SET balance = (SELECT SUM(COALESCE(_t.balance,'0')) FROM _t WHERE _t.group_id = 2) WHERE group_id= 3;

	SELECT((SELECT COALESCE(_t.balance,'0') FROM _t WHERE _t.group_id = 0) - (SELECT COALESCE(_t.balance,'0') FROM _t WHERE _t.group_id = 3)) INTO _profit;
	IF _profit >= '0' THEN
		INSERT INTO _t(head, balance, group_id) SELECT 'Profit Before Income Tax Provision', _profit, 1;
		INSERT INTO _t(head, balance, group_id) SELECT 'Income Tax Provision', '0', 1;
		INSERT INTO _t(head, balance, group_id) SELECT 'Net Profit', _profit, 1;
	ELSE
		INSERT INTO _t(head, balance, group_id) SELECT 'Net Loss', _profit * -1, 1;
	END IF;

	UPDATE _t SET head = g.account_name FROM core.gl_accounts g WHERE _t.gl_id = g.gl_account_id AND _t.group_id IS NULL;
	
	DELETE FROM _t WHERE COALESCE(_t.balance,'0') = '0';

	UPDATE _t SET group_id = 1 WHERE COALESCE(group_id, 0) <> 0;

	RETURN QUERY(SELECT _t.head, _t.balance, _t.group_id FROM _t ORDER BY _t.id);
END
$BODY$;

ALTER FUNCTION transactions.get_pl_account(integer, integer, date, date)
    OWNER TO postgres;
