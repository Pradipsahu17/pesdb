-- select * from core.update_for_customer_details(20, 'test', 'test', 'test', 'test', 'test', 'test', 'test', 'test', 'test', 10000, 100000, 'test', 'test', 'test', 'test', 'test', 10000, 'test', 'test', 'test', 'test', 'test',1,50)

-- DROP FUNCTION core.update_for_customer_details(bigint, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, bigint, character varying);

CREATE OR REPLACE FUNCTION core.update_for_customer_details(
	customer_id_ bigint,
	fmc_family_member_name_ character varying,
	fmc_relation_ character varying,
	fmc_cooperative_name_ character varying,
	fmc_cooperative_name_np_ character varying,
	fmc_address_ character varying,
	fmc_notes_ character varying,
	fi_company_name_ character varying,
	fi_company_name_np_ character varying,
	fi_notes_ character varying,
	average_monthly_income_ character varying,
	average_yearly_income_ character varying,
	company_address_ character varying,
	fi_relation_ character varying,
	fi_family_member_name_ character varying,
	cooperative_name_sf_ character varying,
	cooperative_name_np_sf_ character varying,
	member_id_sf_ character varying,
	notes_sf_ character varying,
	cooperative_address_sf_ character varying,
	hpd_name_ character varying,
	hpd_relation_ character varying,
	post_name_ character varying,
	audit_user_id_ bigint,
	fmc_member_id_ character varying)
    RETURNS void
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
BEGIN
    -- family_multi_cooperative
	IF Exists (SELECT family_multi_cooperative_id FROM core.family_multi_cooperative WHERE customer_id = $1) THEN
        UPDATE core.family_multi_cooperative SET fmc_family_member_name = $2,
        fmc_relation = $3,fmc_cooperative_name = $4,
        fmc_cooperative_name_np = $5,fmc_address = $6,fmc_notes = $7,fmc_member_id=$25 
        WHERE customer_id = $1;
    ELSE
		INSERT INTO core.family_multi_cooperative (customer_id,fmc_family_member_name,fmc_relation,fmc_cooperative_name,fmc_cooperative_name_np,fmc_address,fmc_notes,fmc_member_id,audit_user_id)
		SELECT $1,$2,$3,$4,$5,$6,$7,$25,$24;
	END IF;
        
  
 
    -- multi_cooperative
	IF (SELECT multi_cooperative_id FROM core.multi_cooperative WHERE customer_id = $1) IS NOT NULL THEN
        UPDATE core.multi_cooperative SET cooperative_name_sf = $16, cooperative_name_np_sf = $17, member_id_sf = $18,
		notes_sf = $19, cooperative_address_sf = $20 
		WHERE customer_id = $1;
	ELSE
		INSERT INTO core.multi_cooperative (customer_id, cooperative_name_sf, cooperative_name_np_sf, member_id_sf, notes_sf, cooperative_address_sf,audit_user_id)
		SELECT $1,$16,$17,$18,$19,$20,$24;
	END IF;
        
    -- high_post_detail
	IF (SELECT high_post_detail_id FROM core.high_post_detail WHERE customer_id = $1) IS NOT NULL THEN
        UPDATE core.high_post_detail SET hpd_name = $21, hpd_relation = $22, post_name = $23 
		WHERE customer_id = $1;
	ELSE
		INSERT INTO core.high_post_detail (customer_id,hpd_name , hpd_relation, post_name,audit_user_id)
		SELECT $1,$21,$22,$23,$24;
	END IF;
END
$BODY$;
