-- select * from core.get_deposit_product_report(1, '2020-10-10', '2021-11-11')

-- DROP FUNCTION IF EXISTS core.get_deposit_product_report(integer, date, date);

CREATE OR REPLACE FUNCTION core.get_deposit_product_report(
	office_id_ integer,
	from_ date,
	to_ date)
    RETURNS TABLE(heading integer, deposit_product_name character varying, new_account integer, closed_account integer, total_account integer, saving_amount money, is_heading boolean) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
    ROWS 1000

AS $BODY$
DECLARE total_ds_acc_ integer;
DECLARE new_ds_acc_ integer;
DECLARE terminated_ds_acc_ integer;
DECLARE ds_saving_amount_ money;
DECLARE saving_amount_ money;
DECLARE total_fd_acc_ integer;
DECLARE new_fd_acc_ integer;
DECLARE terminated_fd_acc_ integer;
DECLARE fd_saving_amount_ money;
DECLARE total_rd_acc_ integer;
DECLARE new_rd_acc_ integer;
DECLARE terminated_rd_acc_ integer;
DECLARE rd_saving_amount_ money;
DECLARE i integer := 1;
DECLARE j integer := 1;
DECLARE k integer := 1;
DECLARE product_name_ character varying;
BEGIN
	-- Temp table
	CREATE TEMP TABLE _t(
		heading integer, 
		deposit_product_name character varying, 
		total_new_account integer, 
		total_closed_account integer, 
		total_account integer,
		saving_amount money,
		is_heading boolean) ON COMMIT DROP;
	
	-- daily saving
	SELECT count(*) INTO new_ds_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= false AND is_recurring_deposit = false)
	AND account_open_date BETWEEN $2 AND $3
	AND office_id = $1;
	
	SELECT count(*) INTO terminated_ds_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= false AND is_recurring_deposit = false)
	AND termination_date BETWEEN $2 AND $3
	AND office_id = $1;
	
	SELECT count(*) INTO total_ds_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= false AND is_recurring_deposit = false)
	AND account_open_date <= $3
	AND status = true
	AND office_id = $1;
	
	SELECT sum(m.debit) INTO ds_saving_amount_
	FROM deposit.mv_transaction_view m
	INNER JOIN deposit.account_holders a ON m.account_number_id = a.account_number_id
	WHERE m.tran_date BETWEEN $2 AND $3
	AND deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= false AND is_recurring_deposit = false)
	AND m.office_id = $1;
	
	INSERT INTO _t(heading, deposit_product_name, total_new_account, total_closed_account, total_account,saving_amount,is_heading)
	VALUES (1, 'Daily Saving', new_ds_acc_, terminated_ds_acc_, total_ds_acc_,ds_saving_amount_,true);
	
	CREATE TEMP TABLE _t1(order_id serial, product_id integer, product_name character varying) ON COMMIT DROP;
	INSERT INTO _t1(product_id, product_name)
	SELECT p.deposit_product_id, p.deposit_product_name FROM core.deposit_products p WHERE is_term_deposit= false AND is_recurring_deposit = false;
	
	LOOP
		SELECT count(*) INTO new_ds_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t1.product_id FROM _t1 WHERE order_id = i)
		AND account_open_date BETWEEN $2 AND $3
		AND office_id = $1;

		SELECT count(*) INTO terminated_ds_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t1.product_id FROM _t1 WHERE order_id = i)
		AND termination_date BETWEEN $2 AND $3
		AND office_id = $1;

		SELECT count(*) INTO total_ds_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t1.product_id FROM _t1 WHERE order_id = i)
		AND account_open_date <= $3
		AND status = true
		AND office_id = $1;
		
		SELECT sum(m.debit) INTO saving_amount_
		FROM deposit.mv_transaction_view m
		INNER JOIN deposit.account_holders a ON m.account_number_id = a.account_number_id
		WHERE m.tran_date BETWEEN $2 AND $3
		AND deposit_product_id = (SELECT _t1.product_id FROM _t1 WHERE order_id = i)
		AND m.office_id = $1;
		
		SELECT _t1.product_name INTO product_name_ FROM _t1 WHERE order_id = i;

		INSERT INTO _t(deposit_product_name, total_new_account, total_closed_account, total_account, saving_amount,is_heading)
		VALUES (product_name_, new_ds_acc_, terminated_ds_acc_, total_ds_acc_, saving_amount_,false);
		
		i = i + 1;
		EXIT WHEN i > (SELECT COUNT(*) FROM _t1);
	END LOOP;
	
	
	
	-- fixed deposit
	SELECT count(*) INTO new_fd_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= true AND is_recurring_deposit = false)
	AND account_open_date BETWEEN $2 AND $3
	AND office_id = $1;
	
	SELECT count(*) INTO terminated_fd_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= true AND is_recurring_deposit = false)
	AND termination_date BETWEEN $2 AND $3
	AND office_id = $1;
	
	SELECT count(*) INTO total_fd_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= true AND is_recurring_deposit = false)
	AND account_open_date <= $3
	AND status = true
	AND office_id = $1;
	
	SELECT sum(m.debit) INTO fd_saving_amount_
	FROM deposit.mv_transaction_view m
	INNER JOIN deposit.account_holders a ON m.account_number_id = a.account_number_id
	WHERE m.tran_date BETWEEN $2 AND $3
	AND deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= true AND is_recurring_deposit = false)
	AND m.office_id = $1;
	
	INSERT INTO _t(heading, deposit_product_name, total_new_account, total_closed_account, total_account, saving_amount,is_heading)
	VALUES (2, 'Fixed Deposit', new_fd_acc_, terminated_fd_acc_, total_fd_acc_, fd_saving_amount_,true);
	
	CREATE TEMP TABLE _t2(order_id serial, product_id integer, product_name character varying) ON COMMIT DROP;
	INSERT INTO _t2(product_id, product_name)
	SELECT p.deposit_product_id, p.deposit_product_name FROM core.deposit_products p WHERE is_term_deposit= true AND is_recurring_deposit = false;
	
	LOOP
		SELECT count(*) INTO new_fd_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t2.product_id FROM _t2 WHERE order_id = j)
		AND account_open_date BETWEEN $2 AND $3
		AND office_id = $1;

		SELECT count(*) INTO terminated_fd_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t2.product_id FROM _t2 WHERE order_id = j)
		AND termination_date BETWEEN $2 AND $3
		AND office_id = $1;

		SELECT count(*) INTO total_fd_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t2.product_id FROM _t2 WHERE order_id = j)
		AND account_open_date <= $3
		AND status = true
		AND office_id = $1;
		
		SELECT sum(m.debit) INTO saving_amount_
		FROM deposit.mv_transaction_view m
		INNER JOIN deposit.account_holders a ON m.account_number_id = a.account_number_id
		WHERE m.tran_date BETWEEN $2 AND $3
		AND deposit_product_id = (SELECT _t2.product_id FROM _t2 WHERE order_id = j)
		AND m.office_id = $1;
		
		SELECT _t2.product_name INTO product_name_ FROM _t2 WHERE order_id = j;

		INSERT INTO _t(deposit_product_name, total_new_account, total_closed_account, total_account, saving_amount,is_heading)
		VALUES (product_name_, new_fd_acc_, terminated_fd_acc_, total_fd_acc_, saving_amount_,false);
		
		j = j + 1;
		EXIT WHEN j > (SELECT COUNT(*) FROM _t2);
	END LOOP;
	
	
	-- recurring deposit
	SELECT count(*) INTO new_rd_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= true AND is_recurring_deposit = true)
	AND account_open_date BETWEEN $2 AND $3
	AND office_id = $1;
	
	SELECT count(*) INTO terminated_rd_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= true AND is_recurring_deposit = true)
	AND termination_date BETWEEN $2 AND $3
	AND office_id = $1;
	
	SELECT count(*) INTO total_rd_acc_ FROM deposit.account_holders 
	WHERE deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= true AND is_recurring_deposit = true)
	AND account_open_date <= $3
	AND status = true
	AND office_id = $1;
	
	SELECT sum(m.debit) INTO rd_saving_amount_
	FROM deposit.mv_transaction_view m
	INNER JOIN deposit.account_holders a ON m.account_number_id = a.account_number_id
	WHERE m.tran_date BETWEEN $2 AND $3
	AND deposit_product_id IN (SELECT deposit_product_id FROM core.deposit_products WHERE is_term_deposit= true AND is_recurring_deposit = true)
	AND m.office_id = $1;
	
	INSERT INTO _t(heading, deposit_product_name, total_new_account, total_closed_account, total_account, saving_amount,is_heading)
	VALUES (3, 'Recurring Deposit', new_rd_acc_, terminated_rd_acc_, total_rd_acc_, rd_saving_amount_,true);
	
	CREATE TEMP TABLE _t3(order_id serial, product_id integer, product_name character varying) ON COMMIT DROP;
	INSERT INTO _t3(product_id, product_name)
	SELECT p.deposit_product_id, p.deposit_product_name FROM core.deposit_products p WHERE is_term_deposit= true AND is_recurring_deposit = true;
	
	LOOP
		SELECT count(*) INTO new_rd_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t3.product_id FROM _t3 WHERE order_id = k)
		AND account_open_date BETWEEN $2 AND $3
		AND office_id = $1;

		SELECT count(*) INTO terminated_rd_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t3.product_id FROM _t3 WHERE order_id = k)
		AND termination_date BETWEEN $2 AND $3
		AND office_id = $1;

		SELECT count(*) INTO total_rd_acc_ FROM deposit.account_holders 
		WHERE deposit_product_id = (SELECT _t3.product_id FROM _t3 WHERE order_id = k)
		AND account_open_date <= $3
		AND status = true
		AND office_id = $1;
		
		SELECT sum(m.debit) INTO saving_amount_
		FROM deposit.mv_transaction_view m
		INNER JOIN deposit.account_holders a ON m.account_number_id = a.account_number_id
		WHERE m.tran_date BETWEEN $2 AND $3
		AND deposit_product_id = (SELECT _t3.product_id FROM _t3 WHERE order_id = k)
		AND m.office_id = $1;
		
		SELECT _t3.product_name INTO product_name_ FROM _t3 WHERE order_id = k;

		INSERT INTO _t(deposit_product_name, total_new_account, total_closed_account, total_account, saving_amount,is_heading)
		VALUES (product_name_, new_rd_acc_, terminated_rd_acc_, total_rd_acc_, saving_amount_,false);
		
		k = k + 1;
		EXIT WHEN k > (SELECT COUNT(*) FROM _t3);
	END LOOP;
	
	INSERT INTO _t(deposit_product_name, total_new_account, total_closed_account, total_account, saving_amount)
	SELECT 'Total', SUM(_t.total_new_account), SUM(_t.total_closed_account), SUM(_t.total_account), SUM(_t.saving_amount) 
	FROM _t;

	RETURN QUERY (SELECT * FROM _t);
END
$BODY$;