-- SELECT * FROM core.get_share_transaction_report_details(0::int, '2021-08-10'::date,'2021-08-10'::date, ''::character varying(20), 0::int, 0::int, 0::smallint, 0::smallint)

-- DROP FUNCTION core.get_share_transaction_report_details(integer,date,date,character varying,integer,integer,smallint,smallint)

CREATE OR REPLACE FUNCTION core.get_share_transaction_report_details(
	office_id_ integer,
	from_ date,
	to_ date,
	trans_type_ character varying,
	product_id_ integer,
	user_id_ integer,
	ibt_type_ smallint,
	cash_type_ smallint)
	RETURNS TABLE(sn bigint, office character varying, tran_id bigint, tran_date character varying, value_date character varying, account_number character varying, member_name text, member_address text, contact_number text, product_name character varying , debit money,credit money, statement_reference text, audit_user character varying)
	LANGUAGE 'plpgsql'
	COST 100
	VOLATILE PARALLEL UNSAFE
AS $BODY$
	BEGIN
		CREATE TEMP TABLE _t(
			office character varying,
			tran_id bigint, 
			tran_date character varying, 
			value_date character varying, 
			account_number character varying, 
			member_name text, 
			member_address text, 
			contact_number text, 
			product_name character varying , 
			debit money,
			credit money, 
			statement_reference text, 
			audit_user character varying
		) ON COMMIT DROP;
		
		INSERT INTO _t
		SELECT o.nick_name, t.tran_id, core.date_bs_from_ad(t.tran_date), core.date_bs_from_ad(t.value_date), a.account_number, 
        	c.customer_name, c.permanent_address, c.contact_number, p.share_product_name, t.debit, t.credit,t.statement_reference, u.user_name
		FROM core.get_share_transaction_report($1, $2, $3, $4, $5, $6, $7,$8) t 
		INNER JOIN core.share_accounts a ON t.share_account_id = a.share_account_id 
		INNER JOIN core.share_products p ON a.share_product_id = p.share_product_id
		INNER JOIN core.customers_view c ON t.customer_id = c.customer_id 
		INNER JOIN office.users u ON t.user_id = u.user_id
		INNER JOIN office.offices o ON o.office_id = a.office_id;
		
		INSERT INTO _t(product_name,debit,credit)
		SELECT  '        Total', SUM(COALESCE(_t.debit, '0')), SUM(COALESCE(_t.credit, '0')) FROM _t;
		
		RETURN QUERY(SELECT ROW_NUMBER() OVER(),* FROM _t);
	END
$BODY$;
